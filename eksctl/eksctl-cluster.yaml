apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: eks-poc
  region: eu-west-1
  version: "1.14"
cloudWatch:
  clusterLogging:
    enableTypes:
      ["audit", "authenticator", "controllerManager", "scheduler", "api"]
    
nodeGroups:
  - name: ng1-public
    instanceType: m5.large
    minSize: 1
    maxSize: 5
    volumeSize: 50
    volumeType: gp2
    labels:
      nodegroup-type: public-workloads
    ssh:
      publicKeyName: eks_nodes
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      withAddonPolicies:
        ebs: true
        efs: true
        imageBuilder: true
        autoScaler: true
        externalDNS: true
        certManager: true
        albIngress: true
    kubeletExtraConfig:
      kubeReserved:
        cpu: "300m"
        memory: "300Mi"
        ephemeral-storage: "1Gi"
      kubeReservedCgroup: "/kube-reserved"
      systemReserved:
        cpu: "300m"
        memory: "300Mi"
        ephemeral-storage: "1Gi"
      evictionHard:
        memory.available: "200Mi"
        nodefs.available: "10%"
  - name: ng1-private
    instanceType: m5.large
    minSize: 1
    maxSize: 5
    volumeSize: 50
    volumeType: gp2
    privateNetworking: true
    labels:
      nodegroup-type: private-workloads
    ssh: # use existing EC2 key
      publicKeyName: eks_nodes
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      withAddonPolicies:
        ebs: true
        efs: true
        imageBuilder: true
        autoScaler: true
        externalDNS: true
        certManager: true
        albIngress: true
    kubeletExtraConfig:
      kubeReserved:
        cpu: "300m"
        memory: "300Mi"
        ephemeral-storage: "1Gi"
      kubeReservedCgroup: "/kube-reserved"
      systemReserved:
        cpu: "300m"
        memory: "300Mi"
        ephemeral-storage: "1Gi"
      evictionHard:
        memory.available: "200Mi"
        nodefs.available: "10%"
  - name: ng1-private-addons
    ssh: # use existing EC2 key
      publicKeyName: eks_nodes
    instanceType: m5.large
    desiredCapacity: 1
    volumeSize: 50
    volumeType: gp2
    privateNetworking: true
    labels:
      nodegroup-type: private-cluster-addons
    iam:
      attachPolicyARNs:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      withAddonPolicies:
        ebs: true
        efs: true
        imageBuilder: true
        autoScaler: true
        externalDNS: true
        certManager: true
        albIngress: true
    kubeletExtraConfig:
      kubeReserved:
        cpu: "300m"
        memory: "300Mi"
        ephemeral-storage: "1Gi"
      kubeReservedCgroup: "/kube-reserved"
      systemReserved:
        cpu: "300m"
        memory: "300Mi"
        ephemeral-storage: "1Gi"
      evictionHard:
        memory.available: "200Mi"
        nodefs.available: "10%"
